{"version":3,"sources":["components/Country/Country.js","logo.svg","components/CountryList/CountryList.js","components/SearchBox/Seacrchbox.js","App.js","reportWebVitals.js","index.js"],"names":["Country","props","className","src","stats","CountryCode","alt","Active","Confirmed","Deaths","Recovered","CountryList","map","country","Searchbox","placeholder","handleChange","type","onChange","App","state","countries","searchField","fetch","response","json","this","setState","forEach","a","Slug","data","length","prevState","concat","ISO2","filteredCountries","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAkBeA,GClBA,I,YDGC,SAACC,GACb,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKC,IAAG,sCAAiCF,EAAMG,MAAMC,YAA7C,gBAAwEC,IAAKL,EAAMG,MAAMJ,UACjG,6BAAKC,EAAMG,MAAMJ,UACjB,gCACI,+CAAgBC,EAAMG,MAAMG,UAC5B,kDAAmBN,EAAMG,MAAMI,aAC/B,8CAAeP,EAAMG,MAAMK,UAC3B,kDAAmBR,EAAMG,MAAMM,qBEEhCC,G,MAVK,SAAC,GAAa,IAAZP,EAAW,EAAXA,MAClB,OACI,qBAAKF,UAAU,cAAf,SAEEE,EAAMQ,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAAmCT,MAAOS,GAA5BA,EAAQR,oBCKtCS,EAVG,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aAC5B,OACI,uBAAOC,KAAK,SACZf,UAAU,SACVa,YAAaA,EACbG,SAAUF,KC4CHG,E,kDA7Cb,WAAYlB,GAAO,IAAD,8BAChB,cAAMA,IACDmB,MAAM,CACTC,UAAU,GACVjB,MAAM,GACNkB,YAAY,IALE,E,yMAWOC,MAAM,wC,cAAvBC,E,gBACkBA,EAASC,O,OAA3BJ,E,OACNK,KAAKC,SAAS,CAACN,cACfK,KAAKN,MAAMC,UAAUO,QAArB,uCAA6B,WAAMf,GAAN,iBAAAgB,EAAA,sEACJN,MAAM,4CAAD,OAA6CV,EAAQiB,OADtD,cACrBN,EADqB,gBAETA,EAASC,OAFA,QAErBM,EAFqB,QAInBC,QACR,EAAKL,UAAS,SAAAM,GAAS,MACrB,CAAC7B,MAAM6B,EAAU7B,MAAM8B,OAAhB,2BAA2BH,EAAKA,EAAKC,OAAO,IAA5C,IAAgD3B,YAAYQ,EAAQsB,YANlD,2CAA7B,kCAAAT,KAAA,gB,qIAiBO,IAAD,SACqBA,KAAKN,MAAzBhB,EADD,EACCA,MAAMkB,EADP,EACOA,YACPc,EAAoBhC,EAAMiC,QAAO,SAAAxB,GAAO,OAC5CA,EAAQb,QAAQsC,cAAcC,SAASjB,EAAYgB,kBAErD,OACE,sBAAKpC,UAAU,MAAf,UACI,cAAC,EAAD,CAAWa,YAAY,wBAAwBC,aAAc,SAACwB,GAAD,OAAO,EAAKb,SAAS,CAACL,YAAYkB,EAAEC,OAAOC,WACxG,cAAC,EAAD,CAAatC,MAAOgC,W,GAxCZO,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0404e6df.chunk.js","sourcesContent":["import React from 'react';\r\nimport './country.css';\r\n\r\nconst Country = (props) => {\r\n    return(\r\n        <div className='country'>\r\n            <img src={`https://www.countryflags.io/${props.stats.CountryCode}/flat/64.png`} alt={props.stats.Country}></img>\r\n            <h2>{props.stats.Country}</h2>\r\n            <div>\r\n                <p>{`Active : ${props.stats.Active}`}</p>\r\n                <p>{`Confirmed : ${props.stats.Confirmed}`}</p>\r\n                <p>{`Death : ${props.stats.Deaths}`}</p>\r\n                <p>{`Recovered : ${props.stats.Recovered}`}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport Country from '../Country/Country';\r\nimport './countryList.css';\r\n\r\nconst CountryList = ({stats}) => {\r\n    return(\r\n        <div className='countryList'>\r\n             {\r\n          stats.map(country => <Country key={country.CountryCode} stats={country}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryList;","import React from 'react'\r\n\r\n// instead of props keyword use the object\r\nconst Searchbox = ({placeholder,handleChange})=>{\r\n    return(\r\n        <input type='search'\r\n        className='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Searchbox;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport CountryList from './components/CountryList/CountryList';\nimport Searchbox from './components/SearchBox/Seacrchbox';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      countries:[],\n      stats:[],\n      searchField:\"\"\n    }\n  }\n\n//this method belongs to react so it knows this which belongs to component\n  async componentDidMount(){\n    const response = await fetch('https://api.covid19api.com/countries')\n    const countries = await response.json()\n    this.setState({countries})\n    this.state.countries.forEach(async country =>{\n      const response = await fetch(`https://api.covid19api.com/total/country/${country.Slug}`)\n      const data= await response.json()\n      // console.log(data)\n      if(data.length)\n      this.setState(prevState => (\n        {stats:prevState.stats.concat({...data[data.length-1], CountryCode:country.ISO2})} //??\n      ))\n    })\n  }\n\n  // this method doesn't belong to React so it has no idea about this keyword so we want to bind this method in constructor\n  // if it is arrow function it will give flexibility whether which class arrow function refers to\n  // handleChange(e){\n  //   this.setState({searchField:e.target.value});\n  // }\n\n  render(){\n    const {stats,searchField}= this.state\n    const filteredCountries = stats.filter(country =>(\n      country.Country.toLowerCase().includes(searchField.toLowerCase())\n    ))\n    return (\n      <div className=\"App\">\n          <Searchbox placeholder=\"Enter Country Name...\" handleChange={(e) => this.setState({searchField:e.target.value})}/>\n          <CountryList stats={filteredCountries}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}